rules:
- id: no-printf-in-responsewriter
  patterns:
  - pattern-either:
    - pattern-inside: |
        func $HANDLER(..., $WRITER http.ResponseWriter, ...) {
          ...
        }
    - pattern-inside: |
        func(..., $WRITER http.ResponseWriter, ...) {
          ...
        }
  - pattern: |
      $WRITER.Write(<... fmt.$PRINTF(...) ...>, ...)
  message: |
    Detected 'printf' or similar in 'http.ResponseWriter.write()'.
    This bypasses HTML escaping that prevents cross-site scripting
    vulnerabilities. Instead, use the 'html/template' package
    to render data to users.
  languages:
  - go
  severity: WARNING
  metadata:
    cwe: "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
    owasp: 'A7: Cross-site Scripting (XSS)'
    references:
    - https://blogtitle.github.io/robn-go-security-pearls-cross-site-scripting-xss/
